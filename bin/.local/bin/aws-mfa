#!/usr/bin/env zsh

SESSION_DURATION=129600


set -ef -o pipefail

if [ ! -t 0 ]; then
  echo "Must be on a tty"
  exit 1
fi

if [ -n "$1" ]; then
  export AWS_PROFILE=$1
fi

# From here, don't allow unset variables.
set -u

identity=$(aws sts get-caller-identity --query Arn --output text)
username=$(echo -- "$identity" | sed -n 's!.*/!!p')
if [ -z "$username" ]; then
  echo "Can not identify who you are. Something failed when calling GetCallerIdentity."
  exit 1
fi

echo "User $identity"

# XXX this isn't robust enough if the user has > 1 MFA device.
device=$(aws iam list-mfa-devices --user-name "$username" --query 'MFADevices[0].SerialNumber' --output text)
if [ "$device" = "null" -o $? -ne 0 ]; then
  mfa=$(aws iam list-mfa-devices --user-name "$username")
  echo "Can not find any MFA device(s) for you."
  echo
  echo $mfa
  exit 1
fi

echo "MFA  $device"

echo -n "Enter your MFA code: "
read code

tokens=$(aws sts get-session-token --serial-number "$device" --token-code $code --duration-seconds $SESSION_DURATION)

secret=$(echo -- "$tokens" | sed -n 's!.*"SecretAccessKey": "\(.*\)".*!\1!p')
session=$(echo -- "$tokens" | sed -n 's!.*"SessionToken": "\(.*\)".*!\1!p')
access=$(echo -- "$tokens" | sed -n 's!.*"AccessKeyId": "\(.*\)".*!\1!p')
expire=$(echo -- "$tokens" | sed -n 's!.*"Expiration": "\(.*\)".*!\1!p')

if [ -z "$secret" -o -z "$session" -o -z "$access" ]; then
  echo "Unable to get temporary credentials."
  echo "Could not find secret/access/session tokens in GetSessionToken output."
  exit 1
fi

profile="${AWS_PROFILE}-mfa"
aws --profile $profile configure set aws_access_key_id $access
aws --profile $profile configure set aws_secret_access_key $secret
aws --profile $profile configure set aws_session_token $session

echo "Session valid until $expire using CLI profile $profile"
